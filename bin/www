#!/usr/bin/env node
const http = require('http');
const path = require('path');

// Parse the .env variables
const env = require('@ifaxity/env');
env.config({
  path: path.join(__dirname, '../.env'),
  defaults: {
    PORT: 3000,
    NODE_ENV: 'development',
  },
});
const { PORT } = env;

// Create http server
const app = require('../app');
const server = http.createServer(app.callback());

server.listen(PORT);

/**
 * Listen on provided port, on all network interfaces.
 */
server.on('error', onError);
server.on('listening', onListening);

/**
 * Event listener for HTTP server 'error' event.
 */
function onError(err) {
  if (err.syscall !== 'listen') {
    throw error;
  }

  // handle specific listen errors with friendly messages
  switch (err.code) {
    case 'EACCES':
      console.error(`${PORT} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`${PORT} is already in use`);
      process.exit(1);
      break;
    default:
      throw err;
  }
}

/**
 * Event listener for HTTP server 'listening' event.
 */
function onListening() {
  const addr = server.address();
  const bind = typeof addr == 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;

  console.log('Listening on ' + bind);
}
